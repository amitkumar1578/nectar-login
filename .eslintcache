[{"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/components/Dashboard.js":"1","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/components/Login.js":"2","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/index.js":"3","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/RouteSection.js":"4","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/Validation.js":"5","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reportWebVitals.js":"6","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reducer/login.js":"7","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/action/types.js":"8","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reducer/index.js":"9","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reducer/dashboard.js":"10"},{"size":2207,"mtime":1612180090745,"results":"11","hashOfConfig":"12"},{"size":7750,"mtime":1612180151337,"results":"13","hashOfConfig":"12"},{"size":767,"mtime":1612164864398,"results":"14","hashOfConfig":"12"},{"size":1205,"mtime":1612180058157,"results":"15","hashOfConfig":"12"},{"size":647,"mtime":1612160853520,"results":"16","hashOfConfig":"12"},{"size":362,"mtime":1612114089140,"results":"17","hashOfConfig":"12"},{"size":352,"mtime":1612165202755,"results":"18","hashOfConfig":"12"},{"size":73,"mtime":1612163161452,"results":"19","hashOfConfig":"12"},{"size":165,"mtime":1612178698283,"results":"20","hashOfConfig":"12"},{"size":1080,"mtime":1612178373975,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"12vx865",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"29"},"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/components/Dashboard.js",["47"],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/components/Login.js",["48","49","50"],"import React, { Component } from 'react'\nimport { validateFields } from '../Validation';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport 'antd/dist/antd.css';\nconst initialState = {\n    email: {\n        value: '',\n        validateOnChange: false,\n        error: ''\n    },\n    password: {\n        value: '',\n        validateOnChange: false,\n        error: ''\n    },\n    submitCalled: false,\n    allFieldsValidated: false\n};\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    }\n    handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (\n            this.state[field]['validateOnChange'] === false &&\n            this.state.submitCalled === false\n        ) {\n            this.setState(state => ({\n                [field]: {\n                    ...state[field],\n                    validateOnChange: true,\n                    error: validationFunc(state[field].value)\n                }\n            }));\n        }\n        return;\n    }\n    handleChange(validationFunc, evt) {\n        const field = evt.target.name;\n        const fieldVal = evt.target.value;\n        this.setState(state => ({\n            [field]: {\n                ...state[field],\n                value: fieldVal,\n                error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n            }\n        }));\n    }\n    handleSubmit(evt) {\n        evt.preventDefault();\n        const { email, password } = this.state;\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n        if ([emailError, passwordError].every(e => e === false)) {\n            if ((email.value === this.props.log.log.username) && (password.value === this.props.log.log.password)) {\n                this.setState({ ...initialState, allFieldsValidated: true });\n                this.showAllFieldsValidated();\n                message.success('login authentication succesfully');\n                window.sessionStorage.setItem('NectarLogin', true);\n                window.location = '/';\n            }\n            else {\n                message.error('email/password incorrect');\n            }\n        } else {\n\n            this.setState(state => ({\n                email: {\n                    ...state.email,\n                    validateOnChange: true,\n                    error: emailError\n                },\n                password: {\n                    ...state.password,\n                    validateOnChange: true,\n                    error: passwordError\n                }\n            }));\n        }\n    }\n    showAllFieldsValidated() {\n        setTimeout(() => {\n            this.setState({ allFieldsValidated: false });\n        }, 1500);\n    }\n    render() {\n        const { email, password, allFieldsValidated } = this.state;\n        return (\n            <>\n                <main className=\"login-form\">\n                    <div className=\"cotainer\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-md-8\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">Nectar Infotel</div>\n                                    <div className=\"card-body\">\n                                        <form onSubmit={evt => this.handleSubmit(evt)}>\n                                            <div className=\"form-group row\">\n                                                <label htmlFor=\"email_address\" className=\"col-md-4 col-form-label text-md-right\">E-Mail Address</label>\n                                                <div className=\"col-md-6\">\n                                                    <input type=\"email\" id=\"email_address\" className=\"form-control\" name=\"email-address\" autoFocus name=\"email\" value={email.value}\n                                                        placeholder=\"Enter your email\"\n                                                        className={classnames(\n                                                            'form-control',\n                                                            { 'is-valid': email.error === false },\n                                                            { 'is-invalid': email.error }\n                                                        )}\n                                                        onChange={evt =>\n                                                            this.handleChange(validateFields.validateEmail, evt)\n                                                        }\n                                                        onBlur={evt =>\n                                                            this.handleBlur(validateFields.validateEmail, evt)\n                                                        } />\n                                                    <div className=\"invalid-feedback\">{email.error}</div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"form-group row\">\n                                                <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">Password</label>\n                                                <div className=\"col-md-6\">\n                                                    <input type=\"password\"\n                                                        name=\"password\"\n                                                        value={password.value}\n                                                        placeholder=\"Enter your password\"\n                                                        className={classnames(\n                                                            'form-control',\n                                                            { 'is-valid': password.error === false },\n                                                            { 'is-invalid': password.error }\n                                                        )}\n                                                        onChange={evt =>\n                                                            this.handleChange(validateFields.validatePassword, evt)\n                                                        }\n                                                        onBlur={evt =>\n                                                            this.handleBlur(validateFields.validatePassword, evt)\n                                                        } />\n                                                    <div className=\"invalid-feedback\">{password.error}</div>\n                                                </div>\n                                            </div>\n\n\n\n                                            <div className=\"col-md-6 offset-md-4\">\n                                                <button className=\"btn btn-primary\" type=\"submit\"\n\n                                                    onMouseDown={() => this.setState({ submitCalled: true })}>\n                                                    Login\n                                    </button>\n\n                                            </div>\n\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </main>\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        log: state\n    }\n}\nexport default connect(mapStateToProps)(Login);","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/index.js",[],["51","52"],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/RouteSection.js",[],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/Validation.js",[],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reportWebVitals.js",[],["53","54"],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reducer/login.js",["55"],"import {\n    GET_LOG,\n} from \"../action/types\";\n\nconst initialState = {\n    \"username\": \"nectar123@gmail.com\",\n    \"password\": \"nectar123\"\n};\nexport default (state = initialState, { type }) => {\n    switch (type) {\n        case GET_LOG:\n            return {\n                ...state,\n            };\n\n        default:\n            return state;\n    }\n};\n","/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/action/types.js",[],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reducer/index.js",[],"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/reducer/dashboard.js",["56"],"import {\n    GET_USERS,\n} from \"../action/types\";\n\nconst users = [{\n    \"id\": 1,\n    \"name\": \"test1\",\n    \"age\": 11,\n    \"gender\": \"Male\",\n    \"email\": \"test1@gmail.com\",\n    \"phoneNo\": 911111111,\n}, {\n    \"id\": 2,\n    \"name\": \"test2\",\n    \"age\": 12,\n    \"gender\": \"Male\",\n    \"email\": \"test2@gmail.com\",\n    \"phoneNo\": 9222222222,\n}, {\n    \"id\": 3,\n    \"name\": \"test3\",\n    \"age\": 13,\n    \"gender\": \"Male\",\n    \"email\": \"test3@gmail.com\",\n    \"phoneNo\": 9333333333,\n}, {\n    \"id\": 4,\n    \"name\": \"test4\",\n    \"age\": 14,\n    \"gender\": \"Male\",\n    \"email\": \"test4@gmail.com\",\n    \"phoneNo\": 9444444444,\n}, {\n    \"id\": 5,\n    \"name\": \"test5\",\n    \"age\": 15,\n    \"gender\": \"Male\",\n    \"email\": \"test5@gmail.com\",\n    \"phoneNo\": 9555555555,\n}, {\n    \"id\": 6,\n    \"name\": \"test6\",\n    \"age\": 16,\n    \"gender\": \"Male\",\n    \"email\": \"test6@gmail.com\",\n    \"phoneNo\": 9666666666,\n}];\nexport default (state = users, { type }) => {\n    switch (type) {\n        case GET_USERS:\n            return {\n                ...state,\n            };\n\n        default:\n            return state;\n    }\n};",{"ruleId":"57","severity":1,"message":"58","line":15,"column":63,"nodeType":"59","endLine":15,"endColumn":77},{"ruleId":"60","severity":1,"message":"61","line":92,"column":34,"nodeType":"62","messageId":"63","endLine":92,"endColumn":52},{"ruleId":"57","severity":1,"message":"58","line":106,"column":148,"nodeType":"59","endLine":106,"endColumn":160},{"ruleId":"57","severity":1,"message":"58","line":108,"column":57,"nodeType":"59","endLine":112,"endColumn":59},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":9,"column":1,"nodeType":"72","endLine":19,"endColumn":3},{"ruleId":"70","severity":1,"message":"71","line":48,"column":1,"nodeType":"72","endLine":58,"endColumn":3},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'allFieldsValidated' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]