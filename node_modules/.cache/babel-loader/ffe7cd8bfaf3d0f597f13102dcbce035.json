{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { validateFields } from '../Validation';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport 'antd/dist/antd.css';\nconst initialState = {\n  email: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  password: {\n    value: '',\n    validateOnChange: false,\n    error: ''\n  },\n  submitCalled: false,\n  allFieldsValidated: false\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  handleBlur(validationFunc, evt) {\n    const field = evt.target.name;\n\n    if (this.state[field]['validateOnChange'] === false && this.state.submitCalled === false) {\n      this.setState(state => ({\n        [field]: { ...state[field],\n          validateOnChange: true,\n          error: validationFunc(state[field].value)\n        }\n      }));\n    }\n\n    return;\n  }\n\n  handleChange(validationFunc, evt) {\n    const field = evt.target.name;\n    const fieldVal = evt.target.value;\n    this.setState(state => ({\n      [field]: { ...state[field],\n        value: fieldVal,\n        error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n      }\n    }));\n  }\n\n  handleSubmit(evt) {\n    evt.preventDefault();\n    const {\n      email,\n      password\n    } = this.state;\n    const emailError = validateFields.validateEmail(email.value);\n    const passwordError = validateFields.validatePassword(password.value);\n\n    if ([emailError, passwordError].every(e => e === false)) {\n      if (email.value === this.props.log.log.username && password.value === this.props.log.log.password) {\n        this.setState({ ...initialState,\n          allFieldsValidated: true\n        });\n        this.showAllFieldsValidated();\n        message.success('login authentication succesfully');\n        window.sessionStorage.setItem('NectarLogin', true);\n        window.location = '/';\n      } else {\n        message.error('email/password incorrect');\n      }\n    } else {\n      this.setState(state => ({\n        email: { ...state.email,\n          validateOnChange: true,\n          error: emailError\n        },\n        password: { ...state.password,\n          validateOnChange: true,\n          error: passwordError\n        }\n      }));\n    }\n  }\n\n  showAllFieldsValidated() {\n    setTimeout(() => {\n      this.setState({\n        allFieldsValidated: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      allFieldsValidated\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"login-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cotainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: \"Nectar Infotel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: evt => this.handleSubmit(evt),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"email_address\",\n                        className: \"col-md-4 col-form-label text-md-right\",\n                        children: \"E-Mail Address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-6\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"email\",\n                          id: \"email_address\",\n                          className: \"form-control\",\n                          name: \"email-address\",\n                          autoFocus: true,\n                          name: \"email\",\n                          value: email.value,\n                          placeholder: \"Enter your email\",\n                          className: classnames('form-control', {\n                            'is-valid': email.error === false\n                          }, {\n                            'is-invalid': email.error\n                          }),\n                          onChange: evt => this.handleChange(validateFields.validateEmail, evt),\n                          onBlur: evt => this.handleBlur(validateFields.validateEmail, evt)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"invalid-feedback\",\n                          children: email.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 119,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"form-group row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"password\",\n                        className: \"col-md-4 col-form-label text-md-right\",\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 124,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-md-6\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"password\",\n                          name: \"password\",\n                          value: password.value,\n                          placeholder: \"Enter your password\",\n                          className: classnames('form-control', {\n                            'is-valid': password.error === false\n                          }, {\n                            'is-invalid': password.error\n                          }),\n                          onChange: evt => this.handleChange(validateFields.validatePassword, evt),\n                          onBlur: evt => this.handleBlur(validateFields.validatePassword, evt)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"invalid-feedback\",\n                          children: password.error\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 141,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 125,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-md-6 offset-md-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-primary\",\n                        type: \"submit\",\n                        onMouseDown: () => this.setState({\n                          submitCalled: true\n                        }),\n                        children: \"Login\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    log: state\n  };\n};\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/home/amit/Desktop/playdiator_M/Projects/login-nectar/src/components/Login.js"],"names":["React","Component","validateFields","classnames","connect","message","initialState","email","value","validateOnChange","error","password","submitCalled","allFieldsValidated","Login","constructor","props","state","handleBlur","validationFunc","evt","field","target","name","setState","handleChange","fieldVal","handleSubmit","preventDefault","emailError","validateEmail","passwordError","validatePassword","every","e","log","username","showAllFieldsValidated","success","window","sessionStorage","setItem","location","setTimeout","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { validateFields } from '../Validation';\nimport classnames from 'classnames';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport 'antd/dist/antd.css';\nconst initialState = {\n    email: {\n        value: '',\n        validateOnChange: false,\n        error: ''\n    },\n    password: {\n        value: '',\n        validateOnChange: false,\n        error: ''\n    },\n    submitCalled: false,\n    allFieldsValidated: false\n};\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n    }\n    handleBlur(validationFunc, evt) {\n        const field = evt.target.name;\n\n        if (\n            this.state[field]['validateOnChange'] === false &&\n            this.state.submitCalled === false\n        ) {\n            this.setState(state => ({\n                [field]: {\n                    ...state[field],\n                    validateOnChange: true,\n                    error: validationFunc(state[field].value)\n                }\n            }));\n        }\n        return;\n    }\n    handleChange(validationFunc, evt) {\n        const field = evt.target.name;\n        const fieldVal = evt.target.value;\n        this.setState(state => ({\n            [field]: {\n                ...state[field],\n                value: fieldVal,\n                error: state[field]['validateOnChange'] ? validationFunc(fieldVal) : ''\n            }\n        }));\n    }\n    handleSubmit(evt) {\n        evt.preventDefault();\n        const { email, password } = this.state;\n        const emailError = validateFields.validateEmail(email.value);\n        const passwordError = validateFields.validatePassword(password.value);\n        if ([emailError, passwordError].every(e => e === false)) {\n            if ((email.value === this.props.log.log.username) && (password.value === this.props.log.log.password)) {\n                this.setState({ ...initialState, allFieldsValidated: true });\n                this.showAllFieldsValidated();\n                message.success('login authentication succesfully');\n                window.sessionStorage.setItem('NectarLogin', true);\n                window.location = '/';\n            }\n            else {\n                message.error('email/password incorrect');\n            }\n        } else {\n\n            this.setState(state => ({\n                email: {\n                    ...state.email,\n                    validateOnChange: true,\n                    error: emailError\n                },\n                password: {\n                    ...state.password,\n                    validateOnChange: true,\n                    error: passwordError\n                }\n            }));\n        }\n    }\n    showAllFieldsValidated() {\n        setTimeout(() => {\n            this.setState({ allFieldsValidated: false });\n        }, 1500);\n    }\n    render() {\n        const { email, password, allFieldsValidated } = this.state;\n        return (\n            <>\n                <main className=\"login-form\">\n                    <div className=\"cotainer\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-md-8\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">Nectar Infotel</div>\n                                    <div className=\"card-body\">\n                                        <form onSubmit={evt => this.handleSubmit(evt)}>\n                                            <div className=\"form-group row\">\n                                                <label htmlFor=\"email_address\" className=\"col-md-4 col-form-label text-md-right\">E-Mail Address</label>\n                                                <div className=\"col-md-6\">\n                                                    <input type=\"email\" id=\"email_address\" className=\"form-control\" name=\"email-address\" autoFocus name=\"email\" value={email.value}\n                                                        placeholder=\"Enter your email\"\n                                                        className={classnames(\n                                                            'form-control',\n                                                            { 'is-valid': email.error === false },\n                                                            { 'is-invalid': email.error }\n                                                        )}\n                                                        onChange={evt =>\n                                                            this.handleChange(validateFields.validateEmail, evt)\n                                                        }\n                                                        onBlur={evt =>\n                                                            this.handleBlur(validateFields.validateEmail, evt)\n                                                        } />\n                                                    <div className=\"invalid-feedback\">{email.error}</div>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"form-group row\">\n                                                <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">Password</label>\n                                                <div className=\"col-md-6\">\n                                                    <input type=\"password\"\n                                                        name=\"password\"\n                                                        value={password.value}\n                                                        placeholder=\"Enter your password\"\n                                                        className={classnames(\n                                                            'form-control',\n                                                            { 'is-valid': password.error === false },\n                                                            { 'is-invalid': password.error }\n                                                        )}\n                                                        onChange={evt =>\n                                                            this.handleChange(validateFields.validatePassword, evt)\n                                                        }\n                                                        onBlur={evt =>\n                                                            this.handleBlur(validateFields.validatePassword, evt)\n                                                        } />\n                                                    <div className=\"invalid-feedback\">{password.error}</div>\n                                                </div>\n                                            </div>\n\n\n\n                                            <div className=\"col-md-6 offset-md-4\">\n                                                <button className=\"btn btn-primary\" type=\"submit\"\n\n                                                    onMouseDown={() => this.setState({ submitCalled: true })}>\n                                                    Login\n                                    </button>\n\n                                            </div>\n\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                </main>\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        log: state\n    }\n}\nexport default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}